<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">


    <beans>
        <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
            <property name="driverClass" value="${jdbc.driver}"/>
            <property name="url" value="${jdbc.url}"/>
            <property name="username" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>
        </bean>

        <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
            <property name="dataSource" ref="dataSource"/>
            <property name="packagesToScan">
                <array>
                    <value>org.wf.dp.dniprorada.base.model</value>
                    <value>org.wf.dp.dniprorada.model</value>
                    <!--<value>org.wf.dp.dniprorada.base.service</value>-->

                </array>
            </property>

            <property name="hibernateProperties">
                <props>
                    <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                    <prop key="hibernate.globally_quoted_identifiers">${hibernate.globally_quoted_identifiers}</prop>
                    <!--<prop key="hibernate.show_sql">true</prop>-->
                </props>
            </property>
        </bean>

        <bean id="transactionManager"
              class="org.springframework.orm.hibernate4.HibernateTransactionManager">
            <property name="sessionFactory" ref="sessionFactory"/>
        </bean>


        <!-- ===========================   TRANSACTIONS   ========================= -->

        <tx:advice id="txAdvice" transaction-manager="transactionManager">
            <tx:attributes>
                <tx:method name="get*" read-only="true"/>
                <tx:method name="find*" read-only="true"/>
                <tx:method name="*"/>
            </tx:attributes>
        </tx:advice>

        <aop:config>
            <aop:pointcut id="base.dao" expression="execution(* org.wf.dp.dniprorada.base.dao.*.*(..))"/>

            <aop:advisor pointcut-ref="base.dao" advice-ref="txAdvice"/>
        </aop:config>

        <aop:aspectj-autoproxy proxy-target-class="true" />

        <!-- ==============================   DAO   ============================= -->

        <bean id="flowPropertyDao" class="org.wf.dp.dniprorada.base.dao.GenericEntityDao">
            <constructor-arg value="#{T(org.wf.dp.dniprorada.base.model.FlowProperty)}"/>
        </bean>

        <bean id="flowPropertyClassDao" class="org.wf.dp.dniprorada.base.dao.GenericEntityDao">
            <constructor-arg value="#{T(org.wf.dp.dniprorada.base.model.FlowPropertyClass)}"/>
        </bean>

        <bean id="subjectOrganDepartmentDao" class="org.wf.dp.dniprorada.base.dao.GenericEntityDao">
            <constructor-arg value="#{T(org.wf.dp.dniprorada.base.model.SubjectOrganDepartment)}"/>
        </bean>

        <!-- ============================ LIQUIBASE ============================= -->
        <bean id="liquibase" class="liquibase.integration.spring.SpringLiquibase">
            <property name="dataSource" ref="dataSource"/>
            <property name="changeLog" value="classpath:liquibase/db.changelog-master.xml"/>
            <property name="contexts" value="prod"/>
        </bean>
    </beans>


</beans>
